{"version":3,"sources":["utils/dpos.js","components/dpos/candidate-table.js","routes/dpos.js"],"names":["CANDIDATE_STATUS","PARAM_NAMES","PROPOSAL_STATUS","Voting","Closed","VOTE_TYPE","Yes","No","Abstain","columns","title","dataIndex","width","sorter","a","b","address","filters","_","map","text","index","value","toString","filterMultiple","onFilter","record","status","render","defaultSortOrder","web3","utils","toBN","stakingPool","cmp","formatCelrValue","commissionRate","RATE_BASE","CandidateTable","React","Component","onRow","dispatch","this","props","onClick","routerRedux","push","pathname","dataSource","candidates","candidate","args","pagination","drizzleConnect","state","DPoS","values","getCandidateInfo","contextTypes","drizzle","PropTypes","object","contracts"],"mappings":"qHAAA,wIAAO,IAAMA,EAAmB,CAAC,WAAY,SAAU,aAE1CC,EAAc,CACvB,kBACA,oBACA,eACA,kBACA,kBACA,iBACA,uBAGSC,EAAkB,CAAEC,OAAQ,IAAKC,OAAQ,KAEzCC,EAAY,CACrBC,IAAK,EACLC,GAAI,EACJC,QAAS,I,wLCLPC,EAAU,CACd,CACEC,MAAO,UACPC,UAAW,UACXC,MAAO,IACPC,OAAQ,CAACC,EAAGC,IAAMD,EAAEE,QAAUD,EAAEC,SAElC,CACEN,MAAO,SACPC,UAAW,SACXC,MAAO,IACPK,QAASC,IAAEC,IAAInB,IAAkB,CAACoB,EAAMC,KAAP,CAC/BD,OACAE,MAAOD,EAAME,cAEfC,gBAAgB,EAChBC,SAAU,CAACH,EAAOI,IAAWA,EAAOC,SAAWL,EAC/CT,OAAQ,CAACC,EAAGC,IAAMD,EAAEa,OAASZ,EAAEY,OAC/BC,OAASR,GAASpB,IAAiBoB,IAErC,CACEV,MAAO,eACPC,UAAW,cACXkB,iBAAkB,UAClBhB,OAAQ,CAACC,EAAGC,IACHe,IAAKC,MAAMC,KAAKlB,EAAEmB,aAAaC,IAAIJ,IAAKC,MAAMC,KAAKjB,EAAEkB,cAE9DL,OAASR,GAASe,YAAgBf,IAEpC,CACEV,MAAO,aACPC,UAAW,iBACXC,MAAO,IACPC,OAAQ,CAACC,EAAGC,IAAMD,EAAEsB,eAAiBrB,EAAEqB,eACvCR,OAASR,GAAD,UAAaA,EAAOiB,IAApB,QAIZ,MAAMC,UAAuBC,IAAMC,UAAW,eAAD,oBAC3CC,MAASf,IAAY,IACXgB,EAAaC,KAAKC,MAAlBF,SAER,MAAO,CACLG,QAAS,KACPH,EACEI,cAAYC,KAAK,CACfC,SAAS,cAAD,OAAgBtB,EAAOV,eAOzCY,SAAU,IAEFqB,EADiBN,KAAKC,MAApBM,WACsB/B,IAAKgC,GAAD,YAAC,eAC9BA,EAAU7B,OADmB,IAEhCN,QAASmC,EAAUC,KAAK,MAG1B,OACE,kBAAC,IAAD,CAAOH,WAAYA,EAAYxC,QAASA,EAAS4C,YAAY,EAAOZ,MAAOE,KAAKF,SAcvEa,+BAAehB,GAJ9B,SAAyBiB,GACvB,MAAO,MC5ET,MAAMC,UAAajB,IAAMC,UACvBZ,SAAU,IACA4B,EAASb,KAAKC,MAAdY,KAER,OACE,kBAAC,IAAD,CAAM9C,MAAM,cACV,kBAAC,EAAD,CAAgBwC,WAAYhC,IAAEuC,OAAOD,EAAKE,sBAMlDF,EAAKG,aAAe,CAClBC,QAASC,IAAUC,QAWNR,mCAAeE,GAR9B,SAAyBD,GAAQ,IACvBQ,EAAoBR,EAApBQ,UAAWP,EAASD,EAATC,KAEnB,MAAO,CACLA,KAAK,2BAAMA,GAASO,EAAUP","file":"static/js/8.f5df4d57.chunk.js","sourcesContent":["export const CANDIDATE_STATUS = ['Unbonded', 'Bonded', 'Unbonding'];\n\nexport const PARAM_NAMES = [\n    'ProposalDeposit',\n    'GovernVoteTimeout',\n    'SlashTimeout',\n    'MinValidatorNum',\n    'MaxValidatorNum',\n    'MinStakeInPool',\n    'AdvanceNoticePeriod'\n];\n\nexport const PROPOSAL_STATUS = { Voting: '1', Closed: '2' };\n\nexport const VOTE_TYPE = {\n    Yes: 1,\n    No: 2,\n    Abstain: 3\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from '@drizzle/react-plugin';\nimport { routerRedux } from 'dva/router';\nimport { Table } from 'antd';\nimport web3 from 'web3';\n\nimport { CANDIDATE_STATUS } from '../../utils/dpos';\nimport { formatCelrValue } from '../../utils/unit';\nimport { RATE_BASE } from '../../utils/constant';\n\nconst columns = [\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    width: 450,\n    sorter: (a, b) => a.address - b.address\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    width: 150,\n    filters: _.map(CANDIDATE_STATUS, (text, index) => ({\n      text,\n      value: index.toString()\n    })),\n    filterMultiple: false,\n    onFilter: (value, record) => record.status === value,\n    sorter: (a, b) => a.status - b.status,\n    render: (text) => CANDIDATE_STATUS[text]\n  },\n  {\n    title: 'Staking Pool',\n    dataIndex: 'stakingPool',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => {\n      return web3.utils.toBN(a.stakingPool).cmp(web3.utils.toBN(b.stakingPool));\n    },\n    render: (text) => formatCelrValue(text)\n  },\n  {\n    title: 'Commission',\n    dataIndex: 'commissionRate',\n    width: 140,\n    sorter: (a, b) => a.commissionRate - b.commissionRate,\n    render: (text) => `${text / RATE_BASE} %`\n  }\n];\n\nclass CandidateTable extends React.Component {\n  onRow = (record) => {\n    const { dispatch } = this.props;\n\n    return {\n      onClick: () => {\n        dispatch(\n          routerRedux.push({\n            pathname: `/candidate/${record.address}`\n          })\n        );\n      }\n    };\n  };\n\n  render() {\n    const { candidates } = this.props;\n    const dataSource = candidates.map((candidate) => ({\n      ...candidate.value,\n      address: candidate.args[0]\n    }));\n\n    return (\n      <Table dataSource={dataSource} columns={columns} pagination={false} onRow={this.onRow} />\n    );\n  }\n}\n\nCandidateTable.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  candidates: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default drizzleConnect(CandidateTable, mapStateToProps);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from '@drizzle/react-plugin';\nimport { Card } from 'antd';\n\nimport CandidateTable from '../components/dpos/candidate-table';\n\nclass DPoS extends React.Component {\n  render() {\n    const { DPoS } = this.props;\n\n    return (\n      <Card title=\"Validators\">\n        <CandidateTable candidates={_.values(DPoS.getCandidateInfo)} />\n      </Card>\n    );\n  }\n}\n\nDPoS.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { contracts, DPoS } = state;\n\n  return {\n    DPoS: { ...DPoS, ...contracts.DPoS }\n  };\n}\n\nexport default drizzleConnect(DPoS, mapStateToProps);\n"],"sourceRoot":""}