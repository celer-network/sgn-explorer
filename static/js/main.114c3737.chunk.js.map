{"version":3,"sources":["models/celr-token.js","models/dpos.js","models/sgn.js","models/network.js","index.js","components/setting.js","utils/subscribe.js","components/header/index.js","App.js","router.js","utils/network.js","utils/contracts.js","components/form.js","utils/utils.js","components/select.js"],"names":["namespace","state","effects","reducers","save","action","payload","setting","JSON","parse","localStorage","getItem","gateway","saveSetting","put","setItem","stringify","type","rootSaga","all","drizzleSagas","map","saga","fork","app","dva","initialState","generateContractsInitialState","contractOptions","extraReducers","drizzleReducers","onError","err","resp","message","error","msg","srv","use","createLoading","model","CELRModel","DPoSModel","SGNModel","NetworkModel","router","require","default","checkNetworkCompatibility","then","compatible","start","_store","runSaga","warning","SettingForm","React","Component","constructor","props","context","super","handleSubmit","this","onClose","dispatch","form","current","validateFields","values","console","log","createRef","contracts","drizzle","render","visible","network","formItems","name","initialValue","fieldOptions","placeholder","rules","required","title","placement","width","ref","items","onSubmit","contextTypes","PropTypes","object","drizzleConnect","getCelrAllowance","account","CELRToken","DPoS","methods","allowance","cacheCall","address","menuList","link","Header","location","accounts","pathname","className","theme","mode","selectedKeys","slice","item","Item","key","to","getSimple","Content","Layout","Sider","Footer","App","toggleSetting","setState","prevState","showSetting","web3","componentWillMount","events","InitializeCandidate","fromBlock","event","candidate","returnValues","getCandidateInfo","Approval","filter","owner","spender","subscribeEvent","blockNumber","currentProvider","selectedAddress","setInterval","window","reload","eth","getBlock","block","number","subscribeChainInfo","getNetworkConfig","networkVersion","children","style","margin","withRouter","ConnectedRouter","routerRedux","LoadingWrapper","LoadingContainer","redirectToHome","RouterConfig","history","Dynamic","component","Candidate","Govern","Reward","ContractReader","options","store","exact","path","networkConfigs","localNetworkConfig","networkID","networkConfig","a","ethereum","chainId","request","method","chainIdRaw","String","parseInt","requiredId","process","requiredName","Modal","content","fallback","url","SGN","polls","blocks","FormItem","Form","buttonLayout","wrapperCol","sm","span","offset","xs","FIELD_MAP","date","DatePicker","input","Input","InputNumber","text","TextArea","select","Select","CustomizeForm","e","preventDefault","renderFormItems","formItemLayout","getFieldDecorator","_","field","label","Field","decoratorOptions","getValueFromEvent","args","fileList","target","checked","value","capitalize","submitText","noop","htmlType","defaultProps","labelCol","create","onValuesChange","changedValues","startIndex","endIndex","length","copyToClip","messageText","document","createElement","body","appendChild","setAttribute","execCommand","info","removeChild","Option","allowClear","disabled","optionFilterProp","undefined","onChange","getValue","defaultValue","renderOptions","omit","isNil","showSearch"],"mappings":"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","file":"static/js/main.114c3737.chunk.js","sourcesContent":["export default {\n    namespace: 'CELRToken',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","export default {\n    namespace: 'DPoS',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","export default {\n    namespace: 'SGN',\n\n    state: {},\n\n    effects: {},\n\n    reducers: {\n        save(state, action) {\n            return { ...state, ...action.payload };\n        }\n    }\n};\n","const SETTING_KEY = 'setting';\n\nexport default {\n  namespace: 'network',\n\n  state: {\n    setting: JSON.parse(localStorage.getItem(SETTING_KEY)) || {\n      // gateway: `${window.location.protocol}//${window.location.hostname}/gateway`\n      gateway: \"https://sgntest.celer.network/gateway\"\n    }\n  },\n\n  effects: {\n    *saveSetting({ payload }, { put }) {\n      const { setting } = payload;\n      localStorage.setItem(SETTING_KEY, JSON.stringify(setting));\n\n      yield put({ payload, type: 'save' });\n    }\n  },\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    }\n  }\n};\n","import dva from 'dva';\nimport createLoading from 'dva-loading';\nimport { all, fork } from 'redux-saga/effects';\nimport { generateContractsInitialState, drizzleReducers, drizzleSagas } from '@drizzle/store';\nimport { message } from 'antd';\n\nimport contractOptions from './utils/contracts';\nimport { checkNetworkCompatibility } from './utils/network';\nimport CELRModel from './models/celr-token';\nimport DPoSModel from './models/dpos';\nimport SGNModel from './models/sgn';\nimport NetworkModel from './models/network';\n\nfunction* rootSaga() {\n  yield all(drizzleSagas.map((saga) => fork(saga)));\n}\n\n// 1. Initialize\nconst app = dva({\n  initialState: {\n    ...generateContractsInitialState(contractOptions)\n  },\n  extraReducers: {\n    ...drizzleReducers\n  },\n  onError(err) {\n    if (err.resp) {\n      message.error(err.resp.msg);\n    } else if (err.srv) {\n      message.error(err.srv.msg);\n    } else {\n      message.error(err);\n    }\n  }\n});\n\n// 2. Plugins\napp.use(\n  createLoading({\n    namespace: 'loading'\n    // effects: enable effects level loading state\n  })\n);\n\n// 3. Model\n// Moved to router.js\napp.model(CELRModel);\napp.model(DPoSModel);\napp.model(SGNModel);\napp.model(NetworkModel);\n\n// 4. Router\napp.router(require('./router.js').default);\n\n// 5. Start\ncheckNetworkCompatibility().then((compatible) => {\n  if (compatible) {\n    app.start('#root');\n    app._store.runSaga(rootSaga);\n  } else {\n    message.warning('Please connect to the Ethereum network');\n  }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Drawer } from 'antd';\nimport { drizzleConnect } from '@drizzle/react-plugin';\n\nimport Form from './form';\n\nclass SettingForm extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = {};\n    this.form = React.createRef();\n    this.contracts = context.drizzle.contracts;\n  }\n\n  handleSubmit = () => {\n    const { onClose, dispatch } = this.props;\n\n    this.form.current.validateFields((err, values) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      dispatch({\n        type: 'network/saveSetting',\n        payload: { setting: values }\n      });\n\n      onClose();\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      onClose,\n      network: { setting = {} }\n    } = this.props;\n\n    const formItems = [\n      {\n        name: 'gateway',\n        initialValue: setting.gateway,\n        fieldOptions: {\n          placeholder: 'The gateway URL'\n        },\n        rules: [\n          {\n            message: 'Please enter gateway URL!',\n            required: true\n          }\n        ]\n      }\n    ];\n\n    return (\n      <Drawer title=\"Setting\" placement=\"right\" width=\"500\" onClose={onClose} visible={visible}>\n        <Form ref={this.form} items={formItems} onSubmit={this.handleSubmit} />\n      </Drawer>\n    );\n  }\n}\n\nSettingForm.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nSettingForm.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { network } = state;\n\n  return {\n    network\n  };\n}\n\nexport default drizzleConnect(SettingForm, mapStateToProps);\n","const POLL_INTERVAL = 1000;\n\nexport const subscribeEvent = (account, contracts, dispatch) => {\n  const { DPoS, CELRToken } = contracts;\n\n  DPoS.events.InitializeCandidate(\n    {\n      fromBlock: 0\n    },\n    (err, event) => {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      const { candidate } = event.returnValues;\n      DPoS.methods.getCandidateInfo.cacheCall(candidate);\n    }\n  );\n\n  CELRToken.events.Approval(\n    {\n      filter: {\n        owner: account,\n        spender: DPoS.address\n      }\n    },\n    (err, event) => {\n      if (err) {\n        return;\n      }\n\n      getCelrAllowance(account, contracts);\n    }\n  );\n\n  getCelrAllowance(account, contracts);\n};\n\nexport const subscribeChainInfo = (web3, dispatch) => {\n  const account = web3.currentProvider.selectedAddress;\n  let blockNumber;\n\n  setInterval(() => {\n    if (account !== web3.currentProvider.selectedAddress) {\n      window.location.reload();\n    }\n\n    return web3.eth.getBlock('latest').then((block) => {\n      if (block && blockNumber !== block.number) {\n        dispatch({\n          type: 'network/save',\n          payload: { block }\n        });\n        blockNumber = block.number;\n      }\n    });\n  }, POLL_INTERVAL);\n};\n\nconst getCelrAllowance = (account, contracts) => {\n  const { CELRToken, DPoS } = contracts;\n  CELRToken.methods.allowance.cacheCall(account, DPoS.address);\n};\n","import React from \"react\";\nimport { withRouter, Link } from 'dva/router';\nimport { Layout, Menu, Button } from 'antd';\nimport \"./index.css\";\nimport { getSimple } from \"../../utils/utils\";\n\nconst menuList = [\n    {\n        name: \"All Validators\",\n        link: \"dpos\",\n    },\n    {\n        name: \"My Rewards\",\n        link: \"reward\",\n    },\n]\n\nconst Header = (props) => {\n    const { location, accounts} = props;\n    const { pathname } = location;\n    return (\n        <header className=\"page-header\">\n            <div className=\"header-left\">\n                <div className=\"icon\">SGN</div>\n                <Menu theme=\"light\" mode=\"horizontal\" selectedKeys={[pathname.slice(1)]}>\n                    {menuList.map((item) => {\n                        return <Menu.Item key={item.link}>\n                            <Link to={`/${item.link}`}>{item.name}</Link>\n                        </Menu.Item>\n                    })}\n                </Menu>\n            </div>\n            <div className=\"header-right\">\n                {getSimple(accounts[0], 6, -4)}\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { drizzleConnect } from '@drizzle/react-plugin';\nimport { withRouter, Link } from 'dva/router';\nimport { Layout, Menu, Button } from 'antd';\nimport { LinkOutlined } from '@ant-design/icons';\n\nimport Setting from './components/setting';\nimport { subscribeEvent, subscribeChainInfo } from './utils/subscribe';\nimport { getNetworkConfig } from './utils/network';\n\nimport Header from \"./components/header\";\n\nimport './App.css';\n\nconst { Sider, Content, Footer } = Layout;\n\nclass App extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = { showSetting: false };\n    this.contracts = context.drizzle.contracts;\n    this.web3 = context.drizzle.web3;\n  }\n\n  componentWillMount() {\n    const { accounts, dispatch } = this.props;\n    subscribeEvent(accounts[0], this.contracts, dispatch);\n    subscribeChainInfo(this.web3, dispatch);\n\n    dispatch({\n      type: 'network/save',\n      payload: getNetworkConfig(this.web3.currentProvider.networkVersion)\n    });\n  }\n\n  toggleSetting = () => {\n    this.setState((prevState) => ({\n      showSetting: !prevState.showSetting\n    }));\n  };\n\n  render() {\n    const { showSetting } = this.state;\n    const { children, location, accounts } = this.props;\n    const { pathname } = location;\n\n    return (\n      <Layout>\n        <Header location={location} accounts={accounts}/>\n        {/* <Sider width={220}>\n          <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[pathname.slice(1)]}>\n            <Menu.Item key=\"dpos\">\n              <Link to=\"/dpos\">Validators</Link>\n            </Menu.Item>\n            <Menu.Item key=\"reward\">\n              <Link to=\"/reward\">Reward</Link>\n            </Menu.Item>\n            <Menu.Item key=\"contract-reader\">\n              <Link to=\"/contract-reader\">Contract Reader</Link>\n            </Menu.Item>\n            <Menu.Item>\n              <a\n                href=\"https://github.com/celer-network/sgn-networks/blob/master/docs/delegator.md\"\n                target=\"_blank\"\n              >\n                <LinkOutlined />\n                Delegator Instructions\n              </a>\n            </Menu.Item>\n            <Menu.Item>\n              <a href=\"https://github.com/celer-network/sgn-networks\" target=\"_blank\">\n                <LinkOutlined />\n                Network Configurations\n              </a>\n            </Menu.Item>\n            <Menu.Item>\n              <a href=\"https://discord.gg/jAehyvryHe\" target=\"_blank\">\n                <LinkOutlined />\n                Community Support\n              </a>\n            </Menu.Item>\n            <div className=\"setting\">\n              <Button type=\"primary\" icon=\"setting\" title=\"Setting\" onClick={this.toggleSetting} />\n              <Setting visible={showSetting} onClose={this.toggleSetting} />\n            </div>\n          </Menu>\n        </Sider> */}\n        {/* <Layout> */}\n        <Content style={{ margin: \"0 3.5rem\" }}>{children}</Content>\n          {/* <Footer style={{ textAlign: 'center' }}>SGN © 2019-2020 Celer Network</Footer> */}\n        {/* </Layout> */}\n      </Layout>\n    );\n  }\n}\n\nApp.propTypes = {\n  children: PropTypes.element.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nApp.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { accounts, contracts } = state;\n\n  return {\n    accounts,\n    CELRToken: contracts.CELRToken\n  };\n}\n\nexport default withRouter(drizzleConnect(App, mapStateToProps));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, routerRedux, Switch, Route, Redirect } from 'dva/router';\nimport Dynamic from 'dva/dynamic';\nimport { DrizzleProvider } from '@drizzle/react-plugin';\nimport { LoadingContainer } from '@drizzle/react-components';\n\nimport App from './App';\nimport contractOptions from './utils/contracts';\n\nconst { ConnectedRouter } = routerRedux;\nconst LoadingWrapper = withRouter(LoadingContainer);\n\nconst redirectToHome = () => <Redirect to=\"/dpos\" />;\n\nfunction RouterConfig({ history, app }) {\n  const DPoS = Dynamic({\n    app,\n    component: () => import('./routes/dpos')\n  });\n  const Candidate = Dynamic({\n    app,\n    component: () => import('./routes/candidate')\n  });\n  const Govern = Dynamic({\n    app,\n    component: () => import('./routes/govern')\n  });\n  const Reward = Dynamic({\n    app,\n    component: () => import('./routes/reward')\n  });\n  const ContractReader = Dynamic({\n    app,\n    component: () => import('./routes/contract-reader')\n  });\n\n  return (\n    <DrizzleProvider options={contractOptions} store={app._store}>\n      <ConnectedRouter history={history}>\n        <LoadingWrapper>\n          <App>\n            <Switch>\n              <Route exact path=\"/dpos\" component={DPoS} />\n              <Route exact path=\"/govern\" component={Govern} />\n              <Route exact path=\"/reward\" component={Reward} />\n              <Route exact path=\"/contract-reader\" component={ContractReader} />\n              <Route exact path=\"/candidate/:id\" component={Candidate} />\n              <Route exact path=\"/\" render={redirectToHome} />\n            </Switch>\n          </App>\n        </LoadingWrapper>\n      </ConnectedRouter>\n    </DrizzleProvider>\n  );\n}\n\nRouterConfig.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default RouterConfig;\n","import { Modal } from 'antd';\n\nconst MAINNET = '1';\nconst ROPSTEN = '3';\n\nconst networkConfigs = {};\n\nconst localNetworkConfig = {};\n\nexport const getNetworkConfig = (networkID) => {\n  let networkConfig = localNetworkConfig;\n  if (networkConfigs[networkID]) {\n    networkConfig = networkConfigs[networkID];\n  }\n\n  return networkConfig;\n};\n\nexport const checkNetworkCompatibility = async () => {\n  if (process.env.NODE_ENV === 'development') {\n    return true;\n  }\n  if (!window.ethereum) {\n    return false;\n  }\n  const chainIdRaw =\n    window.ethereum.chainId || (await window.ethereum.request({ method: 'eth_chainId' }));\n  const chainId = String(parseInt(chainIdRaw));\n  const requiredId = process.env.REACT_APP_NETWORK_ID;\n  let requiredName;\n  switch (requiredId) {\n    case ROPSTEN:\n      requiredName = 'ropsten';\n      break;\n    case MAINNET:\n      requiredName = 'mainnet';\n      break;\n    default:\n      requiredName = 'unknown';\n  }\n  if (chainId !== requiredId) {\n    Modal.error({\n      title: `Current network ID ${chainId} is not supported`,\n      content: `Please switch to ${requiredName}`\n    });\n    return false;\n  }\n  return true;\n};\n","import DPoS from './../contracts/DPoS.json';\nimport SGN from './../contracts/SGN.json';\nimport CELRToken from './../contracts/CELRToken.json';\n\n// let drizzle know what contracts we want\nconst contractOptions = {\n    web3: {\n        block: false,\n        fallback: {\n            type: 'ws',\n            url: 'ws://localhost:8545'\n        }\n    },\n    contracts: [DPoS, SGN, CELRToken],\n    polls: {\n        accounts: 1000,\n        blocks: 1000\n    }\n};\n\nexport default contractOptions;\n","import React from 'react';\nimport _ from 'lodash';\nimport { Form } from '@ant-design/compatible';\nimport '@ant-design/compatible/assets/index.css';\nimport { Button, DatePicker, Input, InputNumber } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nconst defaultFormItemLayout = {\n  labelCol: {\n    sm: { span: 8 },\n    xs: { span: 24 }\n  },\n\n  wrapperCol: {\n    sm: { span: 16 },\n    xs: { span: 24 }\n  }\n};\n\nconst buttonLayout = {\n  wrapperCol: {\n    sm: { span: 3, offset: 21 },\n    xs: { span: 24 }\n  }\n};\n\nconst FIELD_MAP = {\n  date: DatePicker,\n  input: Input,\n  number: InputNumber,\n  text: Input.TextArea,\n  select: Select\n};\n\nclass CustomizeForm extends React.Component {\n  handleSubmit = e => {\n    const { form, onSubmit } = this.props;\n    e.preventDefault();\n    form.validateFields((err, values) => {\n      if (!err) {\n        onSubmit(values);\n      }\n    });\n  };\n\n  renderFormItems = () => {\n    const { form, formItemLayout, items } = this.props;\n    const { getFieldDecorator } = form;\n\n    return _.map(items, item => {\n      const {\n        field = 'input',\n        fieldOptions,\n        initialValue,\n        label,\n        name,\n        rules\n      } = item;\n      const Field = FIELD_MAP[field];\n      const decoratorOptions = {\n        initialValue,\n        rules,\n        getValueFromEvent(...args) {\n          if (field === 'file') {\n            return args[0].fileList;\n          }\n\n          const [e] = args;\n          if (!e || !e.target) {\n            return e;\n          }\n\n          const { target } = e;\n          return target.type === 'checkbox' ? target.checked : target.value;\n        }\n      };\n\n      return (\n        <FormItem\n          key={name}\n          {...formItemLayout}\n          label={!label ? _.capitalize(name) : label}\n        >\n          {getFieldDecorator(\n            name,\n            decoratorOptions\n          )(<Field {...fieldOptions} />)}\n        </FormItem>\n      );\n    });\n  };\n\n  render() {\n    const { onSubmit, submitText } = this.props;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {this.renderFormItems()}\n        {onSubmit !== _.noop && (\n          <FormItem {...buttonLayout}>\n            <Button htmlType=\"submit\" type=\"primary\">\n              {submitText}\n            </Button>\n          </FormItem>\n        )}\n      </Form>\n    );\n  }\n}\n\nCustomizeForm.defaultProps = {\n  formItemLayout: defaultFormItemLayout,\n  onSubmit: _.noop,\n  submitText: 'Save'\n};\n\nexport default Form.create({\n  onValuesChange(props, changedValues) {\n    if (props.onValuesChange) {\n      props.onValuesChange(changedValues);\n    }\n  }\n})(CustomizeForm);\n","import {message} from \"antd\";\n\nconst getSimple = (address, startIndex, endIndex) => {\n    const result = address.slice(0,startIndex) + '...' + address.slice(endIndex,address.length);\n    return result;\n}\n\nconst copyToClip = (content, messageText = \"copy success\") => {\n    const input = document.createElement('input');\n\tdocument.body.appendChild(input);\n \tinput.setAttribute('value', content);\n\tinput.select();\n\tif (document.execCommand('copy')) {\n\t\tdocument.execCommand('copy');\n\t\tmessage.info(messageText);\n\t}\n    document.body.removeChild(input);\n}\n\nexport {\n    getSimple,\n    copyToClip\n}","import React from 'react';\nimport { Select } from 'antd';\nimport _ from 'lodash';\n\nconst Option = Select.Option;\n\nexport default class extends React.Component {\n    defaultProps = {\n        allowClear: true,\n        disabled: false,\n        optionFilterProp: 'children',\n        placeholder: ''\n    };\n\n    state = { value: undefined };\n\n    onChange = (value: ValueType) => this.setState({ value });\n\n    getValue = () => {\n        const { defaultValue } = this.props;\n        const { value } = this.state;\n        return value || defaultValue;\n    };\n\n    renderOptions = () => {\n        const { options } = this.props;\n        return _.map(options, ([value, text]) => (\n            <Option key={value} value={value}>\n                {text}\n            </Option>\n        ));\n    };\n\n    render() {\n        const { defaultValue } = this.props;\n        const props = {\n            ..._.omit(this.props, ['options', 'defaultValue'])\n        };\n\n        if (!props.onChange) {\n            props.onChange = this.onChange;\n        }\n        if (!_.isNil(defaultValue)) {\n            props.defaultValue = defaultValue;\n        }\n\n        return (\n            <Select {...props} showSearch={true}>\n                {this.renderOptions()}\n            </Select>\n        );\n    }\n}\n"],"sourceRoot":""}