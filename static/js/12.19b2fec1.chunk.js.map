{"version":3,"sources":["components/filter.js","components/govern/proposal-form.js","routes/govern.js","utils/dpos.js","utils/constant.js","utils/form.js"],"names":["FormItem","Form","Item","Filter","React","PureComponent","onChange","value","this","props","name","render","allowClear","label","mode","selectProps","_","omit","className","capitalize","defaultProps","disabled","placeholder","ProposalForm","Component","constructor","context","super","handleCreateParamProposal","onClose","form","current","validateFields","err","values","console","log","record","contracts","DPoS","methods","createParamProposal","cacheSend","state","createRef","drizzle","visible","formItems","field","fieldOptions","options","PARAM_NAMES","map","param","index","rules","message","required","minValueRule","title","onOk","onCancel","ref","items","contextTypes","PropTypes","object","Govern","toggleProposalModal","setState","prevState","isProposalModalVisible","voteParam","proposalId","voteType","confirmParamProposal","updateFilter","change","filter","renderFilters","status","proposalStatus","PROPOSAL_STATUS","style","width","renderProposal","propsal","args","voteDeadline","newValue","menu","VOTE_TYPE","type","onClick","actions","overlay","icon","size","span","renderProposals","proposals","paramProposals","proposal","grid","gutter","column","dataSource","renderItem","extra","drizzleConnect","CANDIDATE_STATUS","Voting","Closed","Yes","No","Abstain","RATE_PRECISION","RATE_BASE","unit","celrFieldOptions","formatter","parser","replace","minValue","validator","rule","callback","commissionRateField","step","precision","rateLockEndTimeField","prefix","suffix"],"mappings":"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","file":"static/js/12.19b2fec1.chunk.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { Form } from 'antd';\n\nimport Select from './select';\n\nconst FormItem = Form.Item;\n\nexport default class Filter extends React.PureComponent {\n    onChange = value => {\n        const { name, onChange } = this.props;\n\n        if (name) {\n            onChange({ [name]: value });\n            return;\n        }\n\n        onChange(value);\n    };\n\n    render() {\n        const { allowClear, label, name, mode, value } = this.props;\n        const selectProps = {\n            ..._.omit(this.props, ['label', 'name', 'onChange'])\n        };\n\n        if (mode === 'multiple' && !value) {\n            selectProps.value = [];\n        }\n\n        if (!mode && !allowClear) {\n            selectProps.allowClear = false;\n        }\n\n        return (\n            <FormItem\n                className=\"dropdown-filter\"\n                label={label || _.capitalize(name)}\n            >\n                <Select {...selectProps} onChange={this.onChange} />\n            </FormItem>\n        );\n    }\n}\n\nFilter.defaultProps = {\n    disabled: false,\n    label: '',\n    placeholder: 'all'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'antd';\n\nimport Form from '../form';\nimport { PARAM_NAMES } from '../../utils/dpos';\nimport { minValueRule } from '../../utils/form';\n\nclass ProposalForm extends React.Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {};\n        this.form = React.createRef();\n        this.contracts = context.drizzle.contracts;\n    }\n\n    handleCreateParamProposal = () => {\n        const { onClose } = this.props;\n\n        this.form.current.validateFields((err, values) => {\n            if (err) {\n                console.log(err);\n                return;\n            }\n\n            let { value, record } = values;\n\n            this.contracts.DPoS.methods.createParamProposal.cacheSend(\n                record,\n                value\n            );\n            onClose();\n        });\n    };\n\n    render() {\n        const { visible, onClose } = this.props;\n        const recordOptions = PARAM_NAMES.map((param, index) => [index, param]);\n\n        const formItems = [\n            {\n                name: 'record',\n                field: 'select',\n                fieldOptions: {\n                    options: recordOptions,\n                    placeholder: 'The parameter record'\n                },\n                rules: [\n                    {\n                        message: 'Please select a record!',\n                        required: true\n                    }\n                ]\n            },\n            {\n                name: 'value',\n                label: 'Value',\n                field: 'number',\n                fieldOptions: {\n                    placeholder: 'The new value'\n                },\n                rules: [\n                    minValueRule(0),\n                    {\n                        message: 'Please enter a new value!',\n                        required: true\n                    }\n                ]\n            }\n        ];\n\n        return (\n            <Modal\n                title=\"Create Param Proposal\"\n                visible={visible}\n                onOk={this.handleCreateParamProposal}\n                onCancel={onClose}\n            >\n                <Form ref={this.form} items={formItems} />\n            </Modal>\n        );\n    }\n}\n\nProposalForm.propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nProposalForm.contextTypes = {\n    drizzle: PropTypes.object\n};\n\nexport default ProposalForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { drizzleConnect } from '@drizzle/react-plugin';\nimport { Button, Card, List, Statistic, Row, Col, Dropdown, Menu } from 'antd';\n\nimport Filter from '../components/filter';\nimport ProposalForm from '../components/govern/proposal-form';\nimport { PARAM_NAMES, PROPOSAL_STATUS, VOTE_TYPE } from '../utils/dpos';\n\nclass Govern extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = { isProposalModalVisible: false, filter: { status: '1' } };\n    this.contracts = context.drizzle.contracts;\n  }\n\n  toggleProposalModal = () => {\n    this.setState((prevState) => ({\n      isProposalModalVisible: !prevState.isProposalModalVisible\n    }));\n  };\n\n  voteParam = (proposalId, voteType) => {\n    this.contracts.DPoS.methods.voteParam.cacheSend(proposalId, voteType);\n  };\n\n  confirmParamProposal = (proposalId) => {\n    this.contracts.DPoS.methods.confirmParamProposal.cacheSend(proposalId);\n  };\n\n  updateFilter = (change) => {\n    this.setState((prevState) => ({\n      filter: { ...prevState.filter, ...change }\n    }));\n  };\n\n  renderFilters = () => {\n    const { status } = this.state.filter;\n    const proposalStatus = _.map(PROPOSAL_STATUS, (value, status) => [value, status]);\n\n    return (\n      <Filter\n        name=\"status\"\n        options={proposalStatus}\n        style={{ width: 100 }}\n        onChange={this.updateFilter}\n        value={status}\n        allowClear\n      />\n    );\n  };\n\n  renderProposal = (propsal) => {\n    const proposalId = propsal.args[0];\n    const { voteDeadline, record, newValue } = propsal.value;\n    const menu = (\n      <Menu>\n        {_.map(VOTE_TYPE, (value, type) => (\n          <Menu.Item onClick={() => this.voteParam(proposalId, value)}>{type}</Menu.Item>\n        ))}\n      </Menu>\n    );\n\n    return (\n      <List.Item>\n        <Card\n          actions={[\n            <Dropdown overlay={menu}>\n              <Button type=\"link\" title=\"Vote\" icon=\"audit\" size=\"small\">\n                Vote\n              </Button>\n            </Dropdown>,\n            <Button\n              type=\"link\"\n              title=\"Vote\"\n              icon=\"check-square\"\n              size=\"small\"\n              onClick={() => this.confirmParamProposal(proposalId)}\n            >\n              Confirm Proposal\n            </Button>\n          ]}\n        >\n          <Row>\n            <Col span={12}>\n              <Statistic title=\"Proposal ID\" value={proposalId} />\n            </Col>\n            <Col span={12}>\n              <Statistic title=\"Vote Deadline\" value={voteDeadline} />\n            </Col>\n            <Col span={12}>\n              <Statistic title=\"Record\" value={PARAM_NAMES[record]} />\n            </Col>\n            <Col span={12}>\n              <Statistic title=\"New Value\" value={newValue} />\n            </Col>\n          </Row>\n        </Card>\n      </List.Item>\n    );\n  };\n\n  renderProposals = () => {\n    const { DPoS } = this.props;\n    const { filter } = this.state;\n    let proposals = _.values(DPoS.paramProposals);\n\n    proposals = _.filter(proposals, (proposal) => {\n      const { status } = proposal.value;\n      console.log(proposal.value);\n      return filter.status === status;\n    });\n\n    return (\n      <List\n        grid={{ gutter: 16, column: 2 }}\n        dataSource={proposals}\n        renderItem={this.renderProposal}\n      />\n    );\n  };\n\n  render() {\n    const { isProposalModalVisible } = this.state;\n\n    return (\n      <Card\n        title=\"Govern\"\n        extra={\n          <Button type=\"primary\" onClick={this.toggleProposalModal}>\n            Create Proposal\n          </Button>\n        }\n      >\n        {this.renderFilters()}\n        {this.renderProposals()}\n        <ProposalForm visible={isProposalModalVisible} onClose={this.toggleProposalModal} />\n      </Card>\n    );\n  }\n}\n\nGovern.propTypes = {\n  dispatch: PropTypes.func.isRequired\n};\n\nGovern.contextTypes = {\n  drizzle: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  const { contracts, DPoS } = state;\n\n  return {\n    DPoS: { ...DPoS, ...contracts.DPoS }\n  };\n}\n\nexport default drizzleConnect(Govern, mapStateToProps);\n","export const CANDIDATE_STATUS = ['Unbonded', 'Bonded', 'Unbonding'];\n\nexport const PARAM_NAMES = [\n    'ProposalDeposit',\n    'GovernVoteTimeout',\n    'SlashTimeout',\n    'MinValidatorNum',\n    'MaxValidatorNum',\n    'MinStakeInPool',\n    'AdvanceNoticePeriod'\n];\n\nexport const PROPOSAL_STATUS = { Voting: '1', Closed: '2' };\n\nexport const VOTE_TYPE = {\n    Yes: 1,\n    No: 2,\n    Abstain: 3\n};\n","export const EMPTY_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const RATE_PRECISION = 2;\nexport const RATE_BASE = 10 ** RATE_PRECISION;\n","import { RATE_PRECISION, RATE_BASE } from './constant';\n\nexport const currencyFieldOptions = unit => ({\n    formatter: value => (value ? `${value}${unit}` : ''),\n    parser: value => value.replace(/[A-Z]/g, '')\n});\n\nexport const celrFieldOptions = currencyFieldOptions('CELR');\n\nexport const dayFieldOptions = {\n    formatter: value => (value ? `${value}day` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const blockFieldOptions = {\n    formatter: value => (value ? `${value}block` : ''),\n    parser: value => value.replace(/[a-z]/g, '')\n};\n\nexport const rateFieldOptions = {\n    formatter: value => (value ? `${value}%` : ''),\n    parser: value => value.replace(/[%]/g, '')\n};\n\nexport const minValueRule = minValue => ({\n    validator: (rule, value, callback) => {\n        if (value < minValue) {\n            const msg = `value is smaller than ${minValue}`;\n            callback(msg);\n        }\n\n        callback();\n    }\n});\n\nexport const commissionRateField = {\n    name: 'commissionRate',\n    label: 'Commission Rate',\n    field: 'number',\n    fieldOptions: {\n        ...rateFieldOptions,\n        placeholder: 'The commission rate',\n        step: 1 / RATE_BASE,\n        precision: RATE_PRECISION\n    },\n    rules: [\n        minValueRule(0),\n        {\n            message: 'Please enter a commission rate!',\n            required: true\n        }\n    ]\n};\n\nexport const rateLockEndTimeField = {\n    name: 'rateLockEndTime',\n    label: 'Rate Lock End Time',\n    fieldOptions: {\n        placeholder: 'The rate lock end time',\n        prefix: '+',\n        suffix: 'blocks'\n    },\n    rules: [\n        {\n            message: 'Please enter a rate lock end time!',\n            required: true\n        }\n    ]\n};\n"],"sourceRoot":""}